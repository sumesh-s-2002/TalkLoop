name: CI Pipeline
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  auth-service-test:
    name: Run auth service test
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: services/auth-service
    
    steps:  
      - name: checkout code
        uses: actions/checkout@v3

      - name: set up Node env
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm install

      - name: Create .env file
        run: |
            echo "PGHOST=${{ secrets.PGHOST }}" >> .env
            echo "PGPORT=${{ secrets.PGPORT }}" >> .env
            echo "PGUSER=${{ secrets.PGUSER }}" >> .env
            echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> .env
            echo "PGDATABASE=${{ secrets.PGDATABASE }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "APP_BASE_URL=${{ secrets.APP_BASE_URL }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
            echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
            echo "SMTP_PASS=${{ secrets.SMTP_PASS }}" >> .env
            echo "MAIL_FROM=${{ secrets.MAIL_FROM }}" >> .env
            echo "SMTP_USER=${{ secrets.SMTP_USER }}" >> .env
      - name: Run all dependent services in seperate containers
        run: docker compose up -d

      - name: Build and run containers
        run: docker compose up -d --build

      - name: Run tests
        run: docker compose exec talkloop-auth-service npm test
        

        





      





