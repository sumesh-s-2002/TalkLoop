
services:
  ###################################################
  ##### LOAD BALANCER & REVERSE PROXY ###############
  ###################################################
  nginx-proxy:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./gateways/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - auth-service
      - chat-gateway
    networks: [chatnet]
  
  #####################################################
  ############ AUTH MICROSERVICE SET UP ###############
  #####################################################
  auth-service:
    build: ./services/auth-service
    command: sh -c "npm run dev"
    volumes:
      - ./services/auth-service:/app
      - /app/node_modules
      - ./shared:/app/shared
    env_file: ./services/auth-service/.env
    ports: 
     - "4000:4000"
    depends_on:
      - db
    networks:
      - chatnet

  db:
    image: postgres:16
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_DB: authDB
    ports: ["5433:5432"]
    networks:
      - chatnet

  auth-migrate:
    build: ./services/auth-service
    command: npm run migrate
    volumes:
      - ./services/auth-service:/app
      - ./services/auth-service/src/db/migrations:/app/migrations
      - /app/node_modules
    env_file: ./services/auth-service/.env
    depends_on:
      - db
    networks:
      - chatnet

  ######################################################
  ##########SOCKER IO SERVER SET UP#####################
  ######################################################
  chat-gateway:
    command: sh -c "npm run dev"
    build: ./services/chat-gateway
    volumes:
      - ./services/chat-gateway:/app
      - /app/node_modules
      - ./shared:/app/shared
    env_file:
      - ./services/chat-gateway/.env
    expose: 
      - "5000:5000"
    networks: [chatnet]
    depends_on:
      - auth-service
      - connection-manager
      - rabbitmq

  ########################################################
  ########## CONNECTION MANAGER SET UP ###################
  ########################################################
  connection-manager:
    build: ./services/connection-manager
    command: sh -c "npm run dev"
    env_file:
      - ./services/connection-manager/.env
    volumes:
      - ./services/connection-manager:/app
      - /app/node_modules
      - ./shared:/app/shared
    ports: 
      - "6000:6000"
    networks: [chatnet]
    depends_on:
      - redis-cache
      - rabbitmq

  redis-cache:
    image: redis:alpine
    restart: always
    networks: [chatnet]
    expose: [6379]

####################################################
###### RABITMQ #####################################
####################################################
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    networks:
      - chatnet
#####################################################
####### relay service ###############################
#####################################################
  relay-service:
    build: ./services/relay-service
    command: sh -c "./wait-for-it.sh rabbitmq:5672 -- npm run dev"
    env_file:
      - ./services/relay-service/.env
    volumes:
      - ./services/relay-service:/app
      - /app/node_modules
      - ./shared:/app/shared
    ports: 
      - "8000:8000"
    networks:
      - chatnet
    depends_on:
      - mongo
      - rabbitmq

  mongo:
    image: mongo:6
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongoadmin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    networks:
      - chatnet

#####################################################
########### TEST ####################################
#####################################################
  test-client:
    build: ./test-client
    command: sh -c "npm run dev"
    volumes:
      - ./test-client:/app
      - /app/node_modules
      - ./shared:/app/shared
    ports: 
      - "7000:7000"
    depends_on:
      - chat-gateway
      - connection-manager
      - auth-service
    networks: [chatnet]

#######################################################
########## LOGGER SERVICE  ############################
#######################################################
  logger-service:
    build: ./services/logger-service
    command: "npm run dev"
    volumes:
      - ./services/logger-service:/app
      - /app/node-modules
      - ./shared:/app/shared
    ports:
      - "9000:9000"
    networks:
      - chatnet
      
####################################################
######## NETWORKS & VOLUMES ########################
####################################################
networks:
  chatnet:
    driver: bridge

volumes:
  db_data:
  mongo-data:
